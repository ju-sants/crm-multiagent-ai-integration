triage_initial_message_task:
  description: |
    Você é o TriageAgent. Analise a mensagem do cliente fornecida no input:
    - Mensagem: "{message_text}"
    - ID Contato: "{contact_id}"
    - ID Chat: "{chat_id}"
    - Timestamp: "{timestamp}"

    Siga seu FLUXO DE ANÁLISE E DECISÃO:
    1. Consulte caches L0/L1 - (Um dicionário com interações iguais a que recebeu agora).
    2. Consulte a Base de Conhecimento L2 - Qdrant (Uma coleção no qdrant que serve como uma memória no seu cerebro, feita para armazenar mensagens rápidas e embasadas no contexto. Criada por sua equipe especializada.).
    3. Decida se uma RESPOSTA IMEDIATA é viável.
       - Se sim, prepare a(s) mensagem(ns) para envio direto e defina "action": "RESPONDED_DIRECTLY".
    4. Se não houver resposta imediata, determine a INTENÇÃO PRINCIPAL, TÓPICO e CONTEXTO OPERACIONAL.
       - Defina "action": "INITIATE_FULL_PROCESSING".

    L1/L0 - (Interações iguais a essa):

    "{l0l1_cache}"

    L2 - (Memória de mensagens imediatas para serem enviadas):

    "{l2_cache}"


    Retorne APENAS um objeto JSON com os campos especificados na sua SAÍDA ESPERADA.
  expected_output: |
    {
      "action": "RESPONDED_DIRECTLY" | "INITIATE_FULL_PROCESSING",
      "message_text_original": "message_text",
      "contact_id": "contact_id",
      "chat_id": "{chat_id}",
      "identified_topic": "identified_topic",
      "operational_context": "operational_context",
      "direct_response_messages": [mensagens] - se RESPONDED_DIRECTLY,
      "requires_profiling": true - se INITIATE_FULL_PROCESSING
    }

profile_customer_task:
  description: |
    Você é o CustomerProfiler. O TriageAgent decidiu por "INITIATE_FULL_PROCESSING".
    Dados recebidos (contexto da tarefa anterior):
    - ID Contato: "{contact_id}" (Extraído do output da tarefa de triagem)
    - ID Chat: "{chat_id}" (Extraído do output da tarefa de triagem)
    - Mensagem Original: "{message_text_original}" (Extraído do output da tarefa de triagem)
    - Contexto Operacional: "{operational_context}" (Extraído do output da tarefa de triagem)

    Siga seu FLUXO DE CONSTRUÇÃO DE PERFIL:
    1. Analise o perfil do cliente que será proporcionado a você abaixo.
    2. Se o perfil não existir, crie um novo perfil com base na mensagem original e no histórico, tente inferir informações relevantes.
    3. Se o perfil já existir, atualize-o com as informações da mensagem original e do histórico.
    4. Consolide as informações em um sumário e perfil detalhado.
       - Inclua compras passadas, tickets de suporte, sentimento atual, estágio de vendas e preferências.

    Perfil (pode ser null):

    "{customer_profile}"
    
    Retorne APENAS um objeto JSON com os campos especificados na sua SAÍDA ESPERADA.
  expected_output: |
    {
      "contact_id": ID do contato,
      "profile_summary": Sumário do perfil,
      "detailed_profile": { "past_purchases": [], "support_tickets": [], "current_sentiment": "...", "sales_stage": "...", "preferences": [] },
      "operational_context": (SALES, SUPPORT, etc.)
    }

develop_strategy_task:
  description: |
    Você é o StrategicAdvisor. Dados recebidos (contexto das tarefas anteriores):
    - Perfil do Cliente (JSON): "{profile_customer_task_output}"
    - Mensagem Original do Cliente: "{message_text_original}"
    - Contexto Operacional: "{operational_context}"
    - Tópico Identificado: "{identified_topic}"

    Siga sua FILOSOFIA DE CONSULTORIA ESTRATÉGICA e FLUXO DE DEFINIÇÃO DE ESTRATÉGIA:
    1. Analise todos os inputs.
    2. Use a BusinessGuidelinesTool para buscar as diretrizes relevantes para o contexto operacional.
    3. Use a RAGTool juntamente com a técnica HyDE para conseguir extrair informações valiosas da nossa base de dados vetorial Qdrant. 
    4. Formule o plano estratégico (objetivo, pontos-chave, perguntas, necessidade de ação de sistema).
       - Adapte a estratégia se o contexto for SALES (Alessandro) ou SUPPORT (Sofia).

    Retorne APENAS um objeto JSON com os campos especificados na sua SAÍDA ESPERADA.
  expected_output: |
    {
      "strategy_type": (ex: "SALES_QUALIFICATION", "SUPPORT_TROUBLESHOOTING"),
      "conversation_goal": Descrição do objetivo,
      "key_talking_points": [argumentos/informações],
      "questions_to_ask_client": [perguntas],
      "system_action_request": { "action_type": "...", "parameters": {...} } ou null,
      "internal_notes_for_craftsman": "Instruções de tom, estilo, foco.",
      "empathy_statement_suggestion": (Opcional, para Suporte) "Sugestão de frase empática inicial.",
      "super_message": (OBRIGATÓRIO) "Uma super mensagem de muitos parágrafos rica em informação para ser meticulosamente usada pelo ResponseCraftsman"

    }

execute_system_operations_task:
  description: |
    Você é o SystemOperationsAgent. Dados recebidos (contexto da tarefa anterior):
    - Solicitação de Ação de Sistema (JSON): "{develop_strategy_task.output.system_action_request}"

    Verifique se `system_action_request` não é nulo e contém `action_type` e `parameters`.
    Se for nulo ou inválido, retorne: {"action_type_executed": "NONE", "status": "no_action_requested", "data": null, "error_message": null}

    Caso contrário, siga seu FLUXO DE EXECUÇÃO DE AÇÃO DE SISTEMA:
    1. Mapeie o `action_type` para a ferramenta InternalAPITool_* correta.
    2. Execute a ferramenta com os `parameters`.
    Retorne APENAS um objeto JSON com os campos especificados na sua SAÍDA ESPERADA.
  expected_output: |
    {
      "action_type_executed": O `action_type` que foi processado,
      "status": "success" ou "error",
      "data": { ...dados retornados pela API... } (se sucesso),
      "error_message": "Detalhes do erro" (se error)
    }

craft_response_task:
  description: | # - Resultado da Ação de Sistema (JSON, pode ser nulo): "{execute_system_operations_task.output}"
    Você é o ResponseCraftsman, você trabalha numa empresa de rastreamento veícular chamada Global System Rastreamento. 
    
    Dados recebidos (contexto das tarefas anteriores):
    - Plano Estratégico (JSON): "{develop_strategy_task_output}"
    - Perfil do Cliente (JSON): "{profile_customer_task_output}"
    - Contexto Operacional: "{operational_context}"
    - Tópico Identificado: "{identified_topic}"
    - Mensagem Original do Cliente: "{message_text_original}"
    
    Siga seus PRINCÍPIOS DE COMUNICAÇÃO GLOBAL SYSTEM e FLUXO DE CRIAÇÃO DE RESPOSTA:
    1. Analise todos os inputs, especialmente as "internal_notes_for_craftsman" do plano estratégico.
    2. Gere as mensagens principais, fragmentando se necessário.
    3. Gere conteúdo proativo (perguntas/respostas) para a Base de Conhecimento.
       (Este conteúdo será passado para a SaveFastMemoryMessages pela lógica do CrewAI após sua tarefa,
        você apenas gera o conteúdo no formato esperado).
    4. Se o `super_message` estiver presente, use-o como base para criar uma resposta rica e informativa.
    5. Tente focar as informações recebidas na mensagem do cliente, no contexto e no tópico identificado para criar mensagens relevantes para o que o cliente precisa.
    
    Retorne APENAS um objeto JSON com "primary_messages_sequence" e "proactive_content_generated", NADA MAIS!.
  expected_output: |
    {
      "primary_messages_sequence": [ "Mensagem 1...", "Mensagem 2...", ... ],
      "proactive_content_generated": [ { "question": "...", "answer": "..." }, ... ],
    }

coordinate_delivery_task:
  description: |
    Você é o **DeliveryCoordinator** e trabalha na **Global System Rastreamento Veicular**.

    Sua função é ser a mente por trás da estratégia de conversação com o cliente da Global System. Você não envia as mensagens diretamente nem monitora interrupções; seu único trabalho é preparar o "roteiro" da conversa.

    Você tem acesso às "munições" que seus colegas de equipe já prepararam: mensagens prontas e de rápido acesso (com base no contexto atual da conversa) e conteúdo proativo para lidar com possíveis cenários.

    Sua principal responsabilidade é **decidir quais mensagens e conteúdos enviar para o cliente neste momento**, em qual ordem, e se precisam de **mínimas alterações** para se encaixarem perfeitamente no contexto.

    **Você pode e deve fazer pequenas alterações controladas nas mensagens** para garantir um alinhamento perfeito com o contexto da conversa, **apenas se for ESTRITAMENTE necessário**. Preserve a intenção e o conteúdo central da mensagem original.

    ---

    **Contexto da Conversa:**

    * **Tópico identificado:** "{identified_topic}"
    * **Contexto Operacional:** "{operational_context}"
    * **Mensagem do cliente:** "{message_text_original}"

    ---

    **Informações Estratégicas:**

    * **Perfil do Cliente:**
        `{client_profile}`

    * **Plano de Vendas Estratégico:**
        `{strategic_plan}`

    ---

    **Recursos Disponíveis:**

    * **Mensagens prontas da sua equipe (Rapid Messages):**
        `{fast_messages}`

    * **Conteúdo Proativo Gerado (apenas respostas para cenários):**
        `{proactive_content_generated}`

    ---

    **Formato de Retorno (OBRIGATÓRIO):**

    Você **DEVE retornar um JSON** seguindo a estrutura abaixo. Não inclua perguntas do conteúdo proativo no campo `order`; envie apenas as respostas.

    {
        "rapid_messages_choosen_index": [], # Array de índices das mensagens escolhidas da lista 'fast_messages'
        "proactive_content_choosen_index": [], # Array de índices dos conteúdos proativos escolhidos da lista 'proactive_content_generated'
        "order": [] # Array de strings, representando as mensagens finais em ordem de envio, com quaisquer pequenas alterações já aplicadas.
    }


  expected_output: |
    {
    "rapid_messages_choosen_index": [], # indices das mensagens escolhidas na lista
    "proactive_content_choosen_index": [], # indices dos conteúdos proativos escolhidos na lista
    "order": [] # lista de mensagens e conteúdo proativo em ordem de envio
    }

  